{"version":3,"sources":["ContextStore.js","components/Header/Header.js","components/Footer/Footer.js","utils/nft-market.js","components/ProductCard/ProductCard.js","utils/mint-nft.js","Pages/Categories.js","Pages/CreateSell.js","utils/ipfs.js","Pages/Error404.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","ContextStore","children","useState","userData","setUserData","useEffect","providerValue","useMemo","Provider","value","Header","ethereum","window","currentAccount","setCurrentAccount","history","useHistory","a","console","log","request","method","then","accounts","length","init_application","on","go","connectWalletHandler","web3Modal","Web3Modal","network","cacheProvider","providerOptions","connect","Navbar","collapseOnSelect","bg","variant","className","Brand","to","Toggle","Collapse","id","Nav","onClick","push","pathname","substring","Footer","href","target","rel","require","config","NFT_CONTRACT","process","MARKET_CONTRACT","GetMarketItems","marketContract","methods","fetchMarketItems","call","NFTsByOwner","nftContract","owner_address","getNFTsByOwner","AddNewListing","web3","tokenID","price","priceToWei","utils","toWei","toString","tx","selectedAddress","toHex","Number","Math","pow","addListing","encodeABI","chainId","confirmMetamask","BuyNFT","itemID","from","data","transferItem","params","transactionReceipt","ProductCard","on_market","current_wallet","nftData","setNftData","priceSell","setPriceSell","Web3","currentProvider","tokenUri","fetch","response","json","responseJson","catch","error","getNFTData","onSubmitSellNFT","e","tokenId","onSubmitBuyNFT","Card","Img","src","image","Body","Title","name","description","fromWei","seller","Button","InputGroup","FormControl","type","min","placeholder","onChange","changePrice","Text","MAIN_ADDRESS","MintNFT","tokenURI","eth","getTransactionCount","nonce","mintItem","signTransaction","signedTx","sendSignedTransaction","rawTransaction","JSON","stringify","getTokenUri","Categories","account","setAccount","products","setProducts","marketItems","setMarketItems","isMounted","isConnected","init_page","Contract","Market","abi","NFT","your_nfts","Promise","all","map","it_tokenId","item","market_items","mark","i","owner","sold","itemId","Row","x_item","key","Col","xs","md","lg","client","create","host","port","protocol","path","uploadFileToIPFS","file","add","url","uploadedImageUrl","metadata","metadataRes","metaDataUrl","metaDataHashCID","imageHashCID","AddProduct","nftImage","setNftImage","nftTitle","setNftTitle","nftDescription","setNftDescription","onChangeHandler","files","onSubmitHandler","alert","result","status","Form","Group","as","controlId","Label","Control","required","rows","accept","Error404","style","textAlign","Image","fluid","App","exact","component","CreateSell","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74db0e7b.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\n// import { useCookies } from 'react-cookie'\nexport const Context = React.createContext();\n\nexport const ContextStore = ({ children }) => {\n    let initialValue = null;\n    // const [cookies, setCookie, removeCookie] = useCookies(['USER_SESSION']);\n    const [userData, setUserData] = useState(initialValue)\n    \n    useEffect(() => {\n        //if (cookies.USER_SESSION) {\n            // fetch(`/auth/getUser`).then(res => res.json())\n            //     .then(res => {\n            //         return setUserData(res.user)\n            //     })\n        //}\n    }, [])\n\n    // console.log(userData)\n    const providerValue = useMemo(() => ({ userData, setUserData }), [userData, setUserData])\n\n    return (\n        <Context.Provider value={providerValue}>\n            {children}\n        </Context.Provider>\n    )\n}","import React, { /* useContext, */ useEffect, useState } from 'react';\nimport { Navbar, Nav} from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css'\nimport { useHistory } from 'react-router';\nimport Web3Modal from \"web3modal\";\n\nconst Header = () => {\n    const { ethereum } = window;\n    const [currentAccount, setCurrentAccount] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        async function init_application() {\n            const { ethereum } = window;\n            if (!ethereum) {\n              console.log('Please install Metamask')\n              return;\n            }\n            \n            ethereum.request({method: 'eth_accounts'}).then((accounts) => {\n                if (accounts.length > 0) {\n                  setCurrentAccount(accounts[0])\n                  console.log(accounts);\n                }\n            });\n        }\n\n        init_application();\n    }, [currentAccount]);\n\n    ethereum.on('accountsChanged', (accounts) => {\n        history.go(0);\n    });\n\n    const connectWalletButton = () => {\n        return (\n          <button onClick={connectWalletHandler} className='btn btn-primary connect-wallet-button'>\n            Connect Wallet\n          </button>\n        )\n    }\n\n    const connectWalletHandler = async () => {\n        const { ethereum } = window;\n        if (!ethereum) {\n          console.log('Please install Metamask')\n          return;\n        }\n\n      \n        try {\n          const web3Modal = new Web3Modal({\n            network: \"bsc\", // optional\n            cacheProvider: true, // optional\n            providerOptions: {}, // required\n          });\n          await web3Modal.connect();\n          const accounts = await ethereum.request({method: 'eth_accounts'})\n          if (accounts && accounts.length > 0) {\n            setCurrentAccount(accounts[0])\n          }\n        } catch (error) {\n          console.log(error)\n        }\n    }\n\n    const mintNftButton = () => {\n        return (\n            <button onClick={()=>{history.push({ pathname: '/add-product' })}} className='btn btn-primary connect-wallet-button'>\n              Mint NFT\n            </button>\n        )\n    }\n\n    const chunkStrAccount = () => {\n      return '****' + currentAccount.substring(currentAccount.length - 10);\n    }\n\n    return (\n        <Navbar collapseOnSelect bg=\"light\" variant=\"light\">\n            <div className=\"container\">\n                <Navbar.Brand>\n                    <NavLink className=\"navbar-brand\" to=\"/\">All for you...</NavLink>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {/* <Nav.Link href=\"#features\">Features</Nav.Link>\n                        <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\n                    </Nav>\n                    {currentAccount ?\n                        (<Nav>\n                            {mintNftButton()}\n\n                            <p className=\"mx-3\">{chunkStrAccount()}</p>\n                        </Nav>)\n                        :\n                        (<Nav>\n                            {connectWalletButton()}\n                        </Nav>)\n                    }\n                </Navbar.Collapse>\n            </div>\n        </Navbar>\n    )\n}\n\nexport default Header;","import './Footer.css';\nimport { AiFillInstagram, AiFillLinkedin } from 'react-icons/ai'; \nimport { FaFacebook } from 'react-icons/fa';\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className=\"container\">\n                <div className=\"connections\">\n                    <a href=\"/#\" id=\"instaIcon\"><AiFillInstagram /></a>\n                    <a href=\"/#\" id=\"fbIcon\"><FaFacebook /></a>\n                    <a href=\"https://www.linkedin.com/in/iva-tosheva/\" target=\"_blank\" rel=\"noreferrer\" id=\"linkedIcon\"><AiFillLinkedin /></a>\n                </div>\n                All Rights Reserved &copy; 2021 &#8226;\n                <a href=\"https://github.com/Angel-Sky/ReactJS-Project\" target=\"_blank\" rel=\"noreferrer\">GitHub</a>\n            </div>\n        </footer >\n    )\n}\n\nexport default Footer;","require('dotenv').config();\n\nconst { ethereum } = window;\n\nconst NFT_CONTRACT = process.env.REACT_APP_NFT_CONTRACT;\nconst MARKET_CONTRACT = process.env.REACT_APP_MARKET_CONTRACT;\nconst GAS_PRICE = process.env.REACT_APP_GAS_PRICE;\n\nconst GetMarketItems = async (marketContract) => {\n    return await marketContract.methods.fetchMarketItems().call();\n}\n\nconst NFTsByOwner = async (nftContract, owner_address) => {\n    return await nftContract.methods.getNFTsByOwner(owner_address).call();\n}\n\nconst AddNewListing = async (marketContract, web3, tokenID, price) => {\n    let priceToWei = web3.utils.toWei(price.toString(), 'ether');\n\n    const tx = {\n        'from': ethereum.selectedAddress,\n        'to': MARKET_CONTRACT,\n        \"gasPrice\": web3.utils.toHex(Number(GAS_PRICE) * Math.pow(10, 9)),\n        \"gasLimit\": web3.utils.toHex(500000), // fixed gasLimit\n        \"value\": web3.utils.toHex(0), // fixed gasLimit\n        'data': marketContract.methods.addListing(NFT_CONTRACT, tokenID, priceToWei).encodeABI(),\n        chainId: '0x3'\n    };\n    return await confirmMetamask(tx);\n}\n\nconst BuyNFT = async (marketContract, web3, itemID, price) => {\n    console.log(price.toString())\n    const tx = {\n        from: ethereum.selectedAddress,\n        to: MARKET_CONTRACT,\n        value: web3.utils.toHex(price.toString()),\n        data: marketContract.methods.transferItem(NFT_CONTRACT, itemID).encodeABI(),\n        chainId: '0x3'\n    };\n    return await confirmMetamask(tx);\n}\n\nconst confirmMetamask = async (tx) => {\n    console.log(tx)\n    const transactionReceipt = await ethereum.request({\n        method: 'eth_sendTransaction',\n        params: [\n            tx\n        ]\n    }).then(console.log);\n\n    return transactionReceipt;\n}\n\nexport {NFTsByOwner, AddNewListing, GetMarketItems, BuyNFT}","import { Button, Card, FormControl, InputGroup } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport Web3 from \"web3\";\nimport { Link, /* useHistory */ } from 'react-router-dom';\nimport { AddNewListing, BuyNFT } from '../../utils/nft-market.js';\n\nfunction ProductCard({ params, on_market = false, current_wallet = '', web3, marketContract }) {\n    // let history = useHistory ();\n    const [nftData, setNftData] = useState({})\n    const [priceSell, setPriceSell] = useState(0)\n\n    if (web3 === null || web3 === '') {\n        if (window.ethereum) {\n            web3 = new Web3(window.ethereum);\n        } else if (window.web3) {\n            web3 = new Web3(window.web3.currentProvider);\n        };\n    }\n\n    useEffect(() => {\n        async function getNFTData() {\n            if (params.tokenUri !== null && params.tokenUri !== '') {\n                return await fetch(params.tokenUri, {method: \"GET\"})\n                .then((response) => response.json())\n                .then((responseJson) => {\n                    setNftData(responseJson);\n                    console.log(responseJson)\n                  return responseJson;\n                })\n                .catch((error) => {\n                  console.error(error);\n                });\n            }\n        }\n\n        getNFTData()\n    },[params.tokenUri]);\n\n    const changePrice = (e) => {\n        setPriceSell(e.target.value)\n    }\n\n    const onSubmitSellNFT = async (e) => {\n        console.log(params.tokenId, priceSell)\n        if (priceSell > 0) {\n            await AddNewListing(marketContract, web3, params.tokenId, priceSell)\n        } else {\n            console.log('Price > 0')\n        }\n    }\n\n    const onSubmitBuyNFT = async () => {\n        await BuyNFT(marketContract, web3, params.tokenId, params.price)\n        // history.go(0)\n    }\n\n    return (\n        <Card>\n            <Link to={`#`}>\n                <Card.Img variant=\"top\" src={nftData.image} />\n                <Card.Body>\n                    <Card.Title>{nftData.name}</Card.Title>\n                    <small className=\"text-muted\">{nftData.description}</small>\n                    <br />\n                    {\n                        params.price && web3 !== null ?\n                        <small className='text-sm'>Price: {web3.utils.fromWei(params.price.toString(),'ether')} BNB</small>\n                        :\n                        ''\n                    }\n                </Card.Body>\n            </Link>\n            <Card.Footer>\n                <small className=\"text-muted\">\n                    {params.seller ? params.seller : ''}\n                </small>\n                {\n                    on_market ?\n                    <Button className=\"w-100\" onClick={() => onSubmitBuyNFT()}>Buy</Button>\n                    : \n                    (\n                        <div>\n                            <InputGroup className=\"mb-3\">\n                                <FormControl type=\"number\" min=\"0\"  placeholder=\"Price\" onChange={(e) => changePrice(e)} aria-describedby=\"basic-addon2\"/> \n                                <InputGroup.Text id=\"basic-addon2\">BNB</InputGroup.Text>\n                            </InputGroup>\n                            <Button className=\"w-100\" onClick={() => onSubmitSellNFT()}>Sell</Button>\n                        </div>\n                    )\n                }\n            </Card.Footer>\n        </Card>\n    )\n}\n\nexport default ProductCard;","require('dotenv').config();\n\nconst MAIN_ADDRESS = process.env.REACT_APP_MAIN_ADDRESS;\nconst PRIVATE_KEY = process.env.REACT_APP_PRIVATE_KEYS;\nconst GAS_PRICE = process.env.REACT_APP_GAS_PRICE;\nconst NFT_CONTRACT = process.env.REACT_APP_NFT_CONTRACT;\n\n// const { ethereum } = window;\n\nconst MintNFT = async (nftContract, web3, tokenURI) => {\n    //step 3: Define the minting function\n    const nonce = await web3.eth.getTransactionCount(MAIN_ADDRESS, 'latest'); //get latest nonce\n\n    //the transaction\n    const tx = {\n        'from': MAIN_ADDRESS,\n        'to': NFT_CONTRACT,\n        'nonce': nonce,\n        \"gasPrice\": web3.utils.toHex(Number(GAS_PRICE) * Math.pow(10, 9)),\n        \"gasLimit\": web3.utils.toHex(500000), // fixed gasLimit\n        \"value\": web3.utils.toHex(0), // fixed gasLimit\n        'data': nftContract.methods.mintItem(MAIN_ADDRESS, tokenURI).encodeABI()\n    };\n\n    console.log(tx)\n    //step 4: Sign the transaction\n    const signedTx = await web3.eth.accounts.signTransaction(tx, PRIVATE_KEY);\n    console.log(signedTx)\n    const transactionReceipt = await web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n    \n    console.log(`Transaction receipt: ${JSON.stringify(transactionReceipt)}`);\n    return transactionReceipt;\n}\n\nconst getTokenUri = async (nftContract, tokenID) => {\n    return await nftContract.methods.tokenURI(tokenID).call();\n}\n\nexport {MintNFT, getTokenUri}","import { useEffect, useState } from 'react';\nimport ProductCard from '../components/ProductCard/ProductCard';\nimport { Col, Row } from 'react-bootstrap';\nimport '../components/Siders/SearchSider.css'\nimport '../components/Categories/Categories.css';\nimport '../components/ProductCard/ProductCard.css';\nimport { NFTsByOwner, GetMarketItems } from '../utils/nft-market.js';\nimport { getTokenUri } from '../utils/mint-nft.js';\nimport Market from \"../truffle/abis/NFTMarket.json\";\nimport NFT from \"../truffle/abis/DauDQNFT.json\";\nimport Web3 from \"web3\";\n\nconst { ethereum } = window;\nconst NFT_CONTRACT = process.env.REACT_APP_NFT_CONTRACT;\nconst MARKET_CONTRACT = process.env.REACT_APP_MARKET_CONTRACT;\n\nlet web3;\nlet marketContract;\nlet nftContract;\n\nfunction Categories( ) {\n    const [account, setAccount] = useState('')\n    const [products, setProducts] = useState([])\n    const [marketItems, setMarketItems] = useState([])\n\n    useEffect(() => {\n        let isMounted = true;  \n        if (!ethereum) {\n            console.log('Please install Metamask')\n            return;\n        }\n\n        if (!ethereum.isConnected()) {\n            return false;\n        }\n        \n        // let your_nfts = [];\n        const init_page = async () => {\n            ethereum.request({method: 'eth_accounts'}).then(async (accounts) => {\n                if (accounts.length > 0) {\n                    setAccount(accounts[0]);\n                    if (window.ethereum) {\n                        web3 = new Web3(window.ethereum);\n                    } else if (window.web3) {\n                        web3 = new Web3(window.web3.currentProvider);\n                    };\n                \n                    marketContract = new web3.eth.Contract(Market.abi, MARKET_CONTRACT);\n                    nftContract = new web3.eth.Contract(NFT.abi, NFT_CONTRACT);\n        \n                    if (isMounted) {\n                        let your_nfts = await NFTsByOwner(nftContract, accounts[0]);\n                        your_nfts = await Promise.all(your_nfts.map(async it_tokenId => {\n                            let tokenUri = await getTokenUri(nftContract, it_tokenId)\n                            let item = {\n                                tokenId: it_tokenId.toString(),\n                                tokenUri\n                            }\n                            return item\n                        }));\n                        setProducts(your_nfts)\n        \n                        let market_items =  await GetMarketItems(marketContract);\n                        console.log(market_items);\n                        market_items = await Promise.all(market_items.map(async i => {\n                            let tokenUri = await getTokenUri(nftContract, i.tokenId)\n                            let item = {\n                              price: i.price.toString(),\n                              tokenId: i.tokenId.toString(),\n                              seller: i.seller,\n                              owner: i.owner,\n                              tokenUri,\n                              sold: i.sold,\n                              itemId: i.itemId\n                            }\n                            return item\n                        }))\n                        setMarketItems(market_items)\n                        console.log(market_items);\n                    }\n                }\n            });\n\n        }\n        init_page();\n        return () => { isMounted = false };\n    }, [account])\n\n      return (\n        <>\n            <div className=\"container\">\n                <hr/>\n                <label>\n                    Your NFT\n                </label>\n                <Row>\n                    {products.length > 0 && web3 !== null ? products\n                    .map((x_item, key) =>\n                        <Col xs={12} md={6} lg={3} key={key}>\n                            <ProductCard params={x_item} web3={web3} marketContract={marketContract}/>\n                        </Col>\n                    )\n                    :\n                    <Col><small>You don't have NFTs</small></Col>\n                    }\n                </Row>\n                <hr/>\n                <label>\n                    Marketplace\n                </label>\n                <Row>\n                    {marketItems.length > 0 && web3 !== null ? marketItems\n                    .map((x_item, key) =>\n                        <Col xs={12} md={6} lg={3} key={key}>\n                            <ProductCard params={x_item} on_market={true} current_wallet={account} web3={web3} marketContract={marketContract}/>\n                        </Col>\n                    )\n                    :\n                    <Col><small>No NFTs on marketplace</small></Col>\n                    }\n                </Row>\n            </div>\n        </>\n    )\n}\n\nexport default Categories;","import Web3 from \"web3\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Col} from 'react-bootstrap';\nimport '../components/CreateSell/CreateSell.css';\nimport NFT from \"../truffle/abis/DauDQNFT.json\";\nimport { uploadFileToIPFS } from '../utils/ipfs.js';\nimport { MintNFT } from '../utils/mint-nft.js';\n\nconst { ethereum } = window;\nconst NFT_CONTRACT = process.env.REACT_APP_NFT_CONTRACT;\n\nlet web3;\nlet nftContract;\n\nrequire('dotenv').config();\n\nfunction AddProduct() {\n    const [nftImage, setNftImage] = useState('');\n    const [nftTitle, setNftTitle] = useState('');\n    const [nftDescription, setNftDescription] = useState('');\n\n    useEffect(() => { \n        if (!ethereum || !ethereum.isConnected()) {\n            console.log('Please install Metamask')\n            return;\n        }        \n        \n        const init_page = async () => {\n            ethereum.request({method: 'eth_accounts'}).then(async (accounts) => {\n                if (accounts.length > 0) {\n                    if (window.ethereum) {\n                        web3 = new Web3(window.ethereum);\n                    } else if (window.web3) {\n                        web3 = new Web3(window.web3.currentProvider);\n                    };\n                    nftContract = new web3.eth.Contract(NFT.abi, NFT_CONTRACT);\n                }\n            });\n        }\n        init_page();\n    }, []);\n\n    const onChangeHandler = (e, name) =>  {\n        switch (name) {\n            case 'image':\n                setNftImage(e.target.files[0]);\n                console.log('set image');\n                break;\n            case 'title':\n                setNftTitle(e.target.value);\n                console.log('set title');\n                break;\n            case 'description':\n                setNftDescription(e.target.value);\n                console.log('set description');\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    const onSubmitHandler = async (e) => {\n        if (!nftImage || !nftTitle || !nftDescription) {\n            alert('Please fill info');\n            return false;\n        }\n        uploadFileToIPFS(nftImage, nftTitle, nftDescription).then(async (response) => {\n            console.log(response);\n            let result = await MintNFT(nftContract, web3, response.metaDataUrl);\n            console.log(result);\n            if (result.status === true || result.status === 'true') {\n                alert('Success');\n            }\n        });\n    }\n\n    return (\n        <>\n            <div className='container'>\n                <h1 className=\"heading\">Add a Product</h1>\n                {/* <Form onSubmit={onSubmitHandler()}> */}\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridTitle\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter title\" name=\"title\" required onChange={(e) => {onChangeHandler(e, 'title')}} />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group controlId=\"formGridDescription.ControlTextarea1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" rows={3} name=\"description\" required onChange={(e) => {onChangeHandler(e, 'description')}} />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridImage\" >\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control name=\"image\" accept=\"image/*\" type=\"file\" required onChange={(e) => {onChangeHandler(e, 'image')}} />\n                        </Form.Group>\n                    </Form.Row>\n                    <Button className=\"col-lg-12\" variant=\"dark\" type=\"button\" onClick={(e) => {onSubmitHandler()}}>Add product</Button>\n                {/* </Form> */}\n            </div>\n        </>\n    )\n}\n\nexport default AddProduct;","/* eslint-disable */\nconst { create } = require(\"ipfs-http-client\");\n\nconst client = create({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n  path: \"api/v0\",\n});\n\n// THIS FUNCTION MUST BE CALLED WITH YOUR IMAGE 'FILE' BEING PASSED IN AS AN ARGUMENT\n// I SUGGEST PASSING IN A BLOB OF THE FILE OR A DATA URI OBJECT OF AN IMAGE\nexport const uploadFileToIPFS = async (file, name, description) => {\n  try {\n    //1 ADD File to IPFS\n    const url = await client.add(file);\n    const uploadedImageUrl = `https://ipfs.infura.io/ipfs/${url?.path}`;\n\n    //2 ADD Metadata to IPFS\n    const metadata = {\n      name: name,\n      description: description,\n      image: uploadedImageUrl,\n    };\n    const metadataRes = await client.add(JSON.stringify(metadata));\n    const metaDataUrl = `https://ipfs.infura.io/ipfs/${metadataRes?.path}`;\n\n    console.log(metaDataUrl)\n\n    // IF YOU WISH TO PIN YOUR FILE HERE IS THE COMMAND\n    // YOU WILL NEED TO ADD AN AUTH HEADER TO YOUR REQUEST IN ORDER TO PIN USING INFURA\n    // AT TIME OF WRITING THIS (Sept 2021) THERE IS A BUG FOR USING PIN COMMAND FROM THE FRONT END\n    //await client.pin.add(metadataRes?.path);\n\n    //3 return image & metadata URLs and also the CID for each\n    return {\n      uploadedImageUrl,\n      metaDataUrl,\n      metaDataHashCID: metadataRes?.path,\n      imageHashCID: url?.path,\n    };\n  } catch (e) {\n    console.log(\"error uplaoding to IPFS\", e);\n  }\n};\n","import { Image } from 'react-bootstrap';\n\nfunction Error404() {\n    return (\n        <div className=\"container\" style={{textAlign: \"center\"}}>\n            <Image src=\"http://store.picbg.net/pubpic/32/E3/c2b456c4b2d532e3.jpg\" fluid />\n        </div>\n    )\n}\n\nexport default Error404;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Categories from './Pages/Categories';\nimport CreateSell from './Pages/CreateSell';\nimport Error404 from './Pages/Error404';\n\nfunction App() {\n   return (\n      <>\n         <Header />\n         <Switch>\n            <Route path=\"/\" exact component={Categories} />\n            <Route path='/add-product' exact component={CreateSell} />;\n            <Route component={Error404} />\n         </Switch>\n         <Footer />\n      </>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ContextStore } from './ContextStore';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   // <React.StrictMode>\n      <ContextStore>\n         <BrowserRouter>\n            <App />\n         </BrowserRouter>\n      </ContextStore>,\n   // </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}